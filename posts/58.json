{"timestamp": "Sat Oct 13 00: 00: 01 -0700 2007", "title": "elunit?", "id": 58, "content": "<p>Considering the number\n  of <a\n  href=\"http: \/\/sztywny.titaniumhosting.com\/2006\/07\/23\/stiff-asks-great-programmers-answers\/\">agile\n  folk who use emacs<\/a>,  it's pretty surprising how difficult it is\n  to find code for automated testing of elisp. There's plenty of stuff\n  for <a\n  href=\"http: \/\/www.emacswiki.org\/cgi-bin\/emacs\/unit-test.el\">running\n  tests in other languages<\/a>,  but I was only able to find <a href='http: \/\/www.panix.com\/~tehom\/my-code\/regress.el'>one Emacs\n  Lisp specific testing library<\/a>.<\/p>\n\n<p>Unfortunately as I look at the internals of regress.el,  it's clear\n  that it's written by someone very unfamiliar with everyday Lisp\n  idioms: <\/p>\n\n  <pre>\n    (<span class=\"keyword\">while<\/span> suites\n      (setq suite (car suites)\n            suites (cdr suites))\n      (<span class=\"keyword\">if<\/span> (and (car suite) (not (stringp (car suite))))\n          (setq description <span class=\"string\">\"Untitled test suite\"<\/span>)\n        (setq description (car suite)\n              suite (cdr suite)))\n  <\/pre>\n\n<p>Apparently the map function is unfamiliar to the author. It's\n  strange,  because this is a <i>really useful<\/i> library. It works\n  very well,  and it's quite well documented. (It was well-tested,  go\n  figure.)  I've made a few improvements to it so the test results are\n  more readable,  but I'm thinking I might just want to rewrite it.\n  This is partially because the internals <i>are<\/i> so bad,  partially\n  to make it more xUnit-ish and focused on TDD rather than regression\n  testing,  and partially just because it would be a good exercise in\n  emacs lisp.<\/p>\n\n<p>We'll see how that goes. It should be fun,  but it may be foolish to\n  put off improving Rails support for the time that this will take to\n  implement. Then again,  if my past experiences with elisp are any\n  indication,  this will take a lot less time than it would seem like\n  it should up front. Also,  having this in place while writing the\n  Rails support modes would probably smooth things along quite a\n  bit.<\/p>\n\n<p>Speaking of Rails support,  I've\n  improved <a\n\t      href=\"http: \/\/dev.technomancy.us\/phil\/browser\/dotfiles\/.emacs.d\/arorem2\/rhtml-mode.el\">RHTML-mode<\/a>\n  rather significantly in the past few days. There is still\n  one <a href=\"http: \/\/dev.technomancy.us\/phil\/ticket\/216\">immensely\n  irritating bug<\/a> that is getting in the way,  but on the whole it's\n  coming along quite nicely.<\/p>\n\n<p>On an unrelated note,  I came across this little gem about how in an\n  unprecedented move,  the Department of Homeland Security has deemed\n  an entire state of matter to be a national security risk: <\/p>\n\n<a href=\"http: \/\/cosmicvariance.com\/2006\/08\/12\/liquid\/\"><img src=\"http: \/\/cosmicvariance.com\/wp-images\/phasediagram.jpg\"><\/a>\n"}
