{"timestamp":"Mon Feb 05 19:01:23 -0800 2007","uri":"http:\/\/blog.ianbicking.org","post_id":73,"author":"Ian Bicking","id":71,"content":"<p>Anyone looking at the nonsense <span class=\"caps\">BDD<\/span>\/RSpec implementations out there really <strong>must<\/strong> do themselves a favor and look at <a href=\"http:\/\/python.org\/doc\/current\/lib\/module-doctest.html\">Python doctests<\/a><\/p>\n\n\n\t<p>It does everything <span class=\"caps\">BDD<\/span>\/RSpec\/whatever systems do, but in a far more elegant manner.  And the technique is applicable to any scripting-style language (Ruby and elisp included).  And the implementation should be simple.<\/p>\n\n\n\t<p>I&#8217;d call doctest-style tests &#8220;document driven testing&#8221; (slightly higher level than <span class=\"caps\">BDD<\/span>, as it emphasizes intention and narratives), or &#8220;functionally driven testing&#8221;, which is like <span class=\"caps\">BDD<\/span>, but uses the existing term &#8220;functional tests&#8221;.  And really that&#8217;s all this is&#8212;writing functional tests up front instead of unit\/programmer tests.  There&#8217;s nothing very magic or new about it, except the practice itself if you haven&#8217;t used it before.  And, language and implementation aside, doing functional tests before implementation is a great way to program.<\/p>"}
