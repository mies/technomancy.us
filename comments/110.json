[{"timestamp":  "Wed Jun 04 22:28:48 -0700 2008",  "uri":  "blog.hasmanythrough.com",  "author":  "josh susser",  "content":  "I'm sorry I didn't get over to CabooseConf during the peak days. It sounds like it was a great affair. I'm really looking forward to it being integrated into the main conf venue next year. Woot. I agree with much of what you say about MagLev.  I still think it's the most exciting thing I saw at the conf, but I do think it's fair to be skeptical. However, Gemstone has been around a long time and their VM technology is quite solid. I'd lay odds they'll be able to deliver a high-performance VM, though I doubt we'll see 100x performance like some of those microbenchmarks they trotted out. The OODB technology is more interesting to me, though there are many technical challenges to be solved (schema migration, anyone?). Your thoughts on closed vs open are representative of many rubyists and open source hackers, and there's something to them. But I also think that there isn't much to worry about in terms of abusive practices or lock-in.  If this takes off, I'd expect it to spur some open source innovation and Gemstone will either open source things or be trounced by someone else who does.  Even Java is open now, right?  I think the main problem is cultural, and that the open source mindset is a huge shift for Gemstone.  It's probably a good sign that they showed up at the conf and did the session and mixer. Get a dialog going, who knows what might happen. (cue Polyanna theme music...)
"}, {"timestamp":  "Thu Jun 05 20:32:04 -0700 2008",  "uri":  "http://www.livollmers.net",  "author":  "alexvollmer",  "content":  "I too will be greatly disappointed if they follow through on Chad Fowler's threat to move RailsConf to Vegas. Boo hiss."}, {"timestamp":  "Fri Jun 06 07:31:54 -0700 2008",  "uri":  "http://b.logi.cx/",  "author":  "Yossef",  "content":  "I remember seeing a thread on ruby-talk started by someone posting the parse tree from some simple code like `x + y` and wondering what all the message passing was about. That's so slow and inefficient! Just make it add the numbers and you're done, right? Look how much faster it can be!

Yeah, it's not hard to make something as fast as C you're only concerned with C's semantics.

Really, I'm just posting this because I want the '2 comments' not to be a lie, but I imagine that's wishful thinking."}]
